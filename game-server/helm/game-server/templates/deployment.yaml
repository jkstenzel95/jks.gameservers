{{ $deploymentName := print "Deployment-" .Values.env "-" .Values.game "-" .Values.map}}
{{ $deploymentName := lower $deploymentName }}
{{ $initImage := print "jkstenzel95/jks_gameserver_init:" .Values.imageTag}}
{{ $image := print "jkstenzel95/jks_gameserver_runtime:" .Values.imageTag}}
{{ $serviceAccountName := print "jks-gameservers-" .Values.env "-" .Values.game "-serviceaccount" | lower }}
{{ $serverMountPath := print "/mnt/" .Values.game "-server" }}
{{ $secretProviderName := print "aws-secrets-" .Values.env "-" .Values.game }}
{{ $secretProviderName := lower $secretProviderName }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $deploymentName }}
  labels:
    cluster: "jks"
    game: {{ .Values.game }}
    map: {{ .Values.map }}
    mapSet: {{ .Values.mapSet }}
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster: "jks"
      game: {{ .Values.game }}
      map: {{ .Values.map }}
      mapSet: {{ .Values.mapSet }}
  template:
    metadata:
      labels:
        cluster: "jks"
        game: {{ .Values.game }}
        map: {{ .Values.map }}
        mapSet: {{ .Values.mapSet }}
    spec:
      serviceAccountName: {{ $serviceAccountName }}
      nodeSelector:
        {{ if not .Values.flexibleDeployment }}
        {{ print .Values.game "_" .Values.mapSet "_hosted" }}: "true"
        {{ end }}
      volumes:
      {{ if .Values.hasSecrets }}
      - name: jks-secrets
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: {{ $secretProviderName }}
      {{ end }}
      - name: game-server
        {{ if .Values.requestVolume}}
        {{ $volumeName := print $deploymentName "-volume"}}
        persistentVolumeClaim:
          claimName: {{ $volumeName }}
        {{ else }}
        hostPath:
          path: {{ $serverMountPath }}
          type: Directory
        {{ end }}
      - name: shared-dir
        hostPath:
          path: /gameservers-package
          type: Directory
      - name: etc
        hostPath:
          path: /etc/jks-gameserver
          type: Directory
      initContainers:
      - name: gameserver-init
        image: {{ $initImage }}
        resources:
          requests:
            memory: {{ .Values.requestsMemory }}
          limits:
            memory: {{ .Values.limitsMemory }}
        volumeMounts:
        - mountPath: {{ $serverMountPath }}
          name: game-server
        - mountPath: /etc/jks-gameserver
          name: etc
        - mountPath: gameservers-package
          name: shared-dir
        {{ if .Values.hasSecrets }}
        - name: jks-secrets
          mountPath: "/mnt/secrets-store"
          readOnly: true
        {{ end }}
        env:
        - name: SERVER_MOUNT_LOCATION
          value: {{ $serverMountPath }}
        - name: GAME_NAME
          value: {{ .Values.game }}
        - name: MAP_NAME
          value: {{ .Values.map }}
        - name: MAP_SET
          value: {{ .Values.mapSet }}
        - name: ENVIRONMENT
          value: {{ .Values.env }}
        - name: REGION
          value: {{ .Values.region }}
        - name: REGION_SHORTNAME
          value: {{ .Values.regionShortname }}
        - name: SHARED_DIR
          value: /gameservers-package
        - name: NEEDS_SETUP
          value: {{ print "\"" .Values.needsSetup "\"" }}
        - name: DOMAIN
          value: "winecraft.io"
        {{ if .Values.needsSetup }}
        - name: BACKUP_STORAGE_NAME
          value: {{ .Values.backupStorageName }}
        - name: RESOURCE_BUCKET_NAME
          value: {{ .Values.resourceBucketName }}
        {{ end }}
      containers:
      - name: gameserver
        image: {{ $image }}
        resources:
          requests:
            memory: {{ .Values.requestsMemory }}
          limits:
            memory: {{ .Values.limitsMemory }}
        volumeMounts:
        - mountPath: {{ $serverMountPath }}
          name: game-server
        - mountPath: /gameservers-package
          name: shared-dir
        - mountPath: /etc/jks-gameserver
          name: etc
        {{ if .Values.hasSecrets }}
        - name: jks-secrets
          mountPath: "/mnt/secrets-store"
          readOnly: true
        {{ end }}
        env:
        - name: SERVER_MOUNT_LOCATION
          value: {{ $serverMountPath }}
        - name: GAME_NAME
          value: {{ .Values.game }}
        - name: MAP_NAME
          value: {{ .Values.map }}
        - name: MAP_SET
          value: {{ .Values.mapSet }}
        - name: ENVIRONMENT
          value: {{ .Values.env }}
        - name: REGION
          value: {{ .Values.region }}
        - name: REGION_SHORTNAME
          value: {{ .Values.regionShortname }}
        - name: SHARED_DIR
          value: /gameservers-package
        - name: NEEDS_SETUP
          value: {{ print "\"" .Values.needsSetup "\"" }}
        - name: DOMAIN
          value: "winecraft.io"
        {{ if .Values.needsSetup }}
        - name: BACKUP_STORAGE_NAME
          value: {{ .Values.backupStorageName }}
        - name: RESOURCE_BUCKET_NAME
          value: {{ .Values.resourceBucketName }}
        {{ end }}
{{ .Files.Get .Values.environmentVariableFile | indent 8}}
        {{- range $port := .Values.ports }}
        - name: {{ $port.name }}
          value: !!string {{ $port.number }}
        {{- end}}
        ports:
          {{- range $port := .Values.ports }}
          - containerPort: {{ $port.number }}
            hostPort: {{ $port.number }}
            protocol: {{ $port.protocol }}
            name: {{ $port.name | replace "_" "-" | lower }}
          {{- end}}